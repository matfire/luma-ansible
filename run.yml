#!/usr/bin/env ansible-playbook

- hosts: all
  become: true

  vars_files:
    - secret.yml

  tasks:
    - name: install nginx
      apt: name=nginx state=present
    - name: install python3 and virtualenv
      apt: name={{item}} state=present
      with_items:
        - python3.8
        - python3-virtualenv
    - name: install postgres
      apt: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-contrib
    - name: "Install Python packages"
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2-binary 
    - name: start postgresql
      service: 
          name: postgresql
          state: started
          enabled: yes
    - name: create postgres db
      postgresql_db:
        state: present
        name: "luma_{{luma_project}}"
      become: yes
      become_user: postgres
    - name: create postgres user
      postgresql_user:
        state: present
        name: "{{luma_project}}"
        password: "{{user_password}}"
      become: yes
      become_user: postgres
    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "luma_{{luma_project}}"
        roles: "{{luma_project}}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres
    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "/etc/postgresql/12/main/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{luma_project}}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres
    - name: clone project
      git:
        clone: yes
        repo: "{{luma_git}}"
        dest: "~/luma_{{luma_project}}"
    - name: create virtualenvs directory
      file:
        path: /envs
        state: directory
    - name: create virtualenv for project
      command:
        creates: "/envs/{{luma_project}}"
        cmd: "virtualenv /envs/{{luma_project}}"
    - name: install dependencies for luma
      pip:
        requirements: "~/luma_{{luma_project}}/requirements.txt"
        virtualenv: "/envs/{{luma_project}}"
        virtualenv_python: python3
    - name: start nginx
      service:
          name: nginx
          state: started


  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted